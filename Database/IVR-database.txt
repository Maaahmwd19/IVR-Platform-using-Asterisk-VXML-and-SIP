-- Create the IVR database
CREATE DATABASE ivr;

-- Connect to the database
\c ivr

-- Create users table
CREATE TABLE users (
    user_id SERIAL PRIMARY KEY,
    userName VARCHAR(100) NOT NULL,
    MSISDN VARCHAR(15) NOT NULL UNIQUE,
    balance DECIMAL(10,2) DEFAULT 0.00
);

-- Create VXML_files table
CREATE TABLE VXML_files (
    vxml_id SERIAL PRIMARY KEY,
    file_name VARCHAR(100) NOT NULL,
    file_path VARCHAR(255) NOT NULL,
    short_code VARCHAR(10) NOT NULL UNIQUE
);

-- Create Service table
CREATE TABLE service (
    service_id SERIAL PRIMARY KEY,
    service_name VARCHAR(100) NOT NULL,
    service_type VARCHAR(50) NOT NULL,
    quota INTEGER,
    service_fees DECIMAL(10,2) NOT NULL,
    vxml_id INTEGER NOT NULL,
    FOREIGN KEY (vxml_id) REFERENCES VXML_files(vxml_id) ON DELETE RESTRICT
);

-- Create user_service table (junction table with composite primary key)
CREATE TABLE user_service (
    user_id INTEGER NOT NULL,
    service_id INTEGER NOT NULL,
    activation_status VARCHAR(8) NOT NULL CHECK (activation_status IN ('Active', 'InActive')),
    PRIMARY KEY (user_id, service_id),
    FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE,
    FOREIGN KEY (service_id) REFERENCES service(service_id) ON DELETE CASCADE
);

-- this data for test on website after this will delete all 

-- Insert data into users table
INSERT INTO users (userName, MSISDN, balance) VALUES
('John Doe', '1234567890', 50.00),
('Jane Smith', '9876543210', 25.50),
('Alice Johnson', '5551234567', 100.00),
('Bob Wilson', '4449876543', 10.75);

-- Insert data into VXML_files table
INSERT INTO VXML_files (file_name, file_path, short_code) VALUES
('welcome.vxml', '/vxml/welcome.vxml', '1001'),
('menu.vxml', '/vxml/menu.vxml', '1002'),
('billing.vxml', '/vxml/billing.vxml', '1003'),
('support.vxml', '/vxml/support.vxml', '1004');

-- Insert data into service table
INSERT INTO service (service_name, service_type, quota, service_fees, vxml_id) VALUES
('Basic IVR', 'Voice', 100, 5.00, 1),
('Premium IVR', 'Voice', 500, 15.00, 2),
('Billing Service', 'Interactive', 200, 8.50, 3),
('Support Service', 'Interactive', 300, 10.00, 4);

-- Insert data into user_service table
INSERT INTO user_service (user_id, service_id, activation_status) VALUES
(1, 1, 'Active'),
(1, 3, 'InActive'),
(2, 2, 'Active'),
(3, 1, 'Active'),
(3, 4, 'Active'),
(4, 3, 'InActive');



